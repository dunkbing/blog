{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    a: \"a\",\n    span: \"span\",\n    p: \"p\",\n    h4: \"h4\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h3, {\n      id: \"what-is-edge-compute-an-overview-of-edge-compute-providers\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#what-is-edge-compute-an-overview-of-edge-compute-providers\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"What is Edge compute? An Overview of Edge Compute Providers\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Edge compute refers to the concept of performing computations and running applications at the edge of a network, closer to the users. It offers better performance, faster load times, and more cost-effective solutions compared to traditional serverless functions like AWS Lambda or Google Functions. The future of cloud computing is likely to be centered around edge compute.\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"there-are-two-categories-of-edge-compute-providers-edge-functions-and-edge-containers\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#there-are-two-categories-of-edge-compute-providers-edge-functions-and-edge-containers\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"There are two categories of edge compute providers: edge functions and edge containers.\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"Edge functions providers, such as Cloudflare Workers and Deno Deploy, run on V8 isolates similar to web browsers and have their own unique runtime with a limited set of web APIs. These edge functions have zero cold start time and scale up and down automatically. However, they can only handle one request at a time, similar to opening a new browser tab. Edge functions are ideal for applications that require quick response times and have no state.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"On the other hand, edge containers, like those provided by Fly.io, allow more control and flexibility. These containers run actual containers, giving you the ability to choose your runtime, read/write to the file system, and even have an embedded SQLite database for improved performance. Unlike edge functions, edge containers can handle multiple requests concurrently. While they don't scale to zero by default, they can scale up and down automatically like serverless functions.\"\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It's important to note that while edge compute generally offers better performance, this also depends on the location of your database. To ensure optimal performance, you can use an \\\"Edge database\\\" that is distributed globally. This means your edge functions or containers will use the nearest edge database, reducing latency. Popular fully-managed edge databases include Turso and LiteFS from Fly.io, the latter being an embedded database that runs in the same container as your app, resulting in extremely low latency. However, it's essential to keep in mind that LiteFS is not fully-managed.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If you're not using an edge database, it's recommended to limit your edge compute to a single region closest to your database. While this technically may not be considered \\\"edge,\\\" it still offers the benefits of no cold start time and lower cost.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In conclusion, edge compute is an emerging technology that provides improved performance and cost efficiency for running applications at the edge of the network. Whether you choose edge functions or edge containers depends on the specific requirements and scalability needs of your application.\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"references\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#references\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), _jsx(_components.a, {\n        href: \"#references\"\n      }), \"References:\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://fly.io/blog/the-serverless-server/\",\n        children: \"https://fly.io/blog/the-serverless-server/\"\n      }), \"\\n\", _jsx(_components.a, {\n        href: \"https://fauna.com/blog/comparison-faas-providers\",\n        children: \"https://fauna.com/blog/comparison-faas-providers\"\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"What is Edge compute","description":"Edge compute refers to the concept of performing computations and running applications at the edge of a network, closer to the users.","publishedTime":"2023-09-15","modifiedTime":"2023-09-15","image":"/images/bridge.jpg"}},"frontMatter":{"title":"What is Edge compute","description":"Edge compute refers to the concept of performing computations and running applications at the edge of a network, closer to the users.","publishedTime":"2023-09-15","modifiedTime":"2023-09-15","image":"/images/bridge.jpg"}},"__N_SSG":true}