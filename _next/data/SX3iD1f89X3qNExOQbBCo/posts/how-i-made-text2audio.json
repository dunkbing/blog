{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h3: \"h3\",\n    span: \"span\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    ol: \"ol\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"In this post, I'll walk you through the creation of my website \", _jsx(_components.a, {\n        href: \"https://text2audio.cc\",\n        children: \"Text2Audio\"\n      }), \" using FreshJS, a full-stack Deno framework. The site leverages the Google Text-to-Speech API (actually Google Translate API) and is deployed on Deno Deploy. You can find the \", _jsx(_components.a, {\n        href: \"https://github.com/dunkbing/text2audio\",\n        children: \"source code here\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"what-is-text2audiocc\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#what-is-text2audiocc\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"What is Text2Audio.cc?\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Text2audio.cc is a straightforward platform allowing you to convert any text into audio via Google's text-to-speech service. It supports multiple languages, voices, and speeds, with the option to download the resulting audio as an mp3. Additionally, you can paste a URL, and the website automatically extracts the text from the webpage, converting it into audio.\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"why-did-i-create-text2audiocc\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#why-did-i-create-text2audiocc\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Why did I create Text2Audio.cc?\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This project was a personal endeavor to delve into Deno, FreshJS, and the Google Text-to-Speech API. I also aimed to craft a practical tool for generating audio for my TikTok videos.\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"how-was-text2audiocc-developed\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#how-was-text2audiocc-developed\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"How was Text2Audio.cc developed?\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The tools and technologies used include:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"Deno\"\n          }), \": A secure runtime for JavaScript and TypeScript with features such as built-in TypeScript support, a dependency manager, and a rich standard library.\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"FreshJS\"\n          }), \": A Deno web framework resembling Next.js, supporting TypeScript out of the box, server-side rendering, island architecture, and API routes.\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"Google Text-to-Speech API\"\n          }), \": A service within the Google Translate API, converting text into natural-sounding speech with diverse language and voice options.\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"Deno Deploy\"\n          }), \": A global deployment platform for Deno applications, offering low-latency execution on the network edge.\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"Cloudflare R2\"\n          }), \": Used for storing and serving audio files, it's an S3-compatible storage service with 10GB of free storage.\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The key steps in creating Text2Audio.cc were:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Generate a FreshJS project using the \", _jsx(_components.code, {\n          children: \"deno run -A -r https://fresh.deno.dev\"\n        }), \" command.\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Utilize the project's pre-configured dependencies.\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Set up the home page in the \", _jsx(_components.code, {\n          children: \"index.tsx\"\n        }), \" file with Preact components for the website's UI and user interactions.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Develop an API route in the \", _jsx(_components.code, {\n          children: \"audio.ts\"\n        }), \" file for converting text to audio using the Google Text-to-Speech API.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Create a utility function in the \", _jsx(_components.code, {\n          children: \"utils\"\n        }), \" folder to fetch text from a URL.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Test the website locally with \", _jsx(_components.code, {\n          children: \"deno task start\"\n        }), \" for a development server with hot reloading.\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Deploy the website to Deno Deploy by pushing the project to GitHub and connecting it to Deno Deploy.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"And there you have it! That's the journey from conceptualization to deployment of my website, \", _jsx(_components.a, {\n        href: \"https://text2audio.cc\",\n        children: \"Text2Audio\"\n      }), \", built on FreshJS, utilizing the Google Text-to-Speech API, and deployed on Deno Deploy.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"I hope you found this blog post insightful. Feel free to drop any questions or feedback in the comments or reach out to me on Twitter. Thanks for reading!\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"Creating text2audio.cc with Deno and FreshJS","description":"I made text2audio.cc as a personal project to learn more about Deno, FreshJS, and Google text to speech API. I also wanted to create a useful tool that could help generate audio for my TikTok video.","publishedTime":"2023-10-31","modifiedTime":"2023-10-31"}},"frontMatter":{"title":"Creating text2audio.cc with Deno and FreshJS","description":"I made text2audio.cc as a personal project to learn more about Deno, FreshJS, and Google text to speech API. I also wanted to create a useful tool that could help generate audio for my TikTok video.","publishedTime":"2023-10-31","modifiedTime":"2023-10-31"}},"__N_SSG":true}