{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    span: \"span\",\n    code: \"code\",\n    p: \"p\",\n    h2: \"h2\",\n    pre: \"pre\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(\"br\", {}), \"\\n\", _jsxs(_components.h1, {\n      id: \"the-nethttp-package-in-go\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#the-nethttp-package-in-go\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"The \", _jsx(_components.code, {\n        children: \"net/http\"\n      }), \" Package in Go\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"net/http\"\n      }), \" package in Go is a powerful tool for building HTTP servers and clients. It provides a rich set of functionalities for handling HTTP requests and responses, making it a versatile package for a wide range of web-related tasks.\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"setting-up-a-simple-http-server\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#setting-up-a-simple-http-server\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Setting Up a Simple HTTP Server\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Let's delve into a simple example of how to set up an HTTP server using the \", _jsx(_components.code, {\n        children: \"net/http\"\n      }), \" package.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"package\"\n        }), \" main\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"fmt\\\"\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"net/http\\\"\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"func\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"main\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    http\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"HandleFunc\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"/\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"func\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"w http\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"ResponseWriter\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" r \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"*\"\n        }), \"http\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"Request\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n        fmt\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"Fprint\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"w\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"Hello, World!\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\n    http\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"ListenAndServe\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\":8080\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"nil\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This program sets up a server that listens on port 8080 and responds with \\\"Hello, World!\\\" for any request to the root (\\\"/\\\") path.\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"handling-http-requests\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#handling-http-requests\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Handling HTTP Requests\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [\"http\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"HandleFunc\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"/\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"func\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"w http\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"ResponseWriter\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" r \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"*\"\n        }), \"http\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"Request\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    fmt\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"Fprint\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"w\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"Hello, World!\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"http.HandleFunc\"\n      }), \" function is used to define how the server responds to specific routes. The provided function takes two parameters: \", _jsx(_components.code, {\n        children: \"http.ResponseWriter\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"*http.Request\"\n      }), \". The response writer is used to send the response back to the client, and the request contains information about the incoming request.\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"starting-the-server\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#starting-the-server\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Starting the Server\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [\"http\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"ListenAndServe\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\":8080\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"nil\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This line starts the HTTP server. It listens on port 8080, and the \", _jsx(_components.code, {\n        children: \"nil\"\n      }), \" argument means that it will use the default ServeMux (multiplexer) provided by the \", _jsx(_components.code, {\n        children: \"http\"\n      }), \" package. The server will handle incoming HTTP requests based on the registered handlers.\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"working-with-query-parameters\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#working-with-query-parameters\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Working with Query Parameters\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can easily handle query parameters using the \", _jsx(_components.code, {\n        children: \"r.URL.Query()\"\n      }), \" method. Let's modify our server to greet a user based on a provided name parameter:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"func\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"main\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    http\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"HandleFunc\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"/\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"func\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"w http\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"ResponseWriter\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" r \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"*\"\n        }), \"http\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"Request\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n        name \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":=\"\n        }), \" r\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"URL\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"Query\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"Get\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"name\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), \" name \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"==\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"\\\"\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n            name \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"Guest\\\"\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n        fmt\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"Fprintf\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"w\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"Hello, %s!\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" name\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\n    \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// ... rest of the code\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Now, you can visit \", _jsx(_components.code, {\n        children: \"http://localhost:8080/?name=John\"\n      }), \" and the server will respond with \\\"Hello, John!\\\"\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"serving-static-files\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#serving-static-files\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Serving Static Files\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [\"staticDir \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":=\"\n        }), \" http\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"Dir\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"./static\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\nfileServer \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":=\"\n        }), \" http\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"FileServer\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"staticDir\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\nhttp\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"Handle\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"/static/\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" http\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"StripPrefix\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"/static/\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" fileServer\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Create a 'static' folder alongside your \", _jsx(_components.code, {\n        children: \"main.go\"\n      }), \" file and add any static files like HTML, CSS, and JavaScript. For example, you created \", _jsx(_components.code, {\n        children: \"hello.html\"\n      }), \" inside the 'static' folder.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Now, when you visit \", _jsx(_components.code, {\n        children: \"http://localhost:8080/static/hello.html\"\n      }), \", you will be able to see your HTML served.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Explanation:\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"http.Dir\"\n      }), \" function is used to convert a string (representing a directory path) into a type that implements the \", _jsx(_components.code, {\n        children: \"http.FileSystem\"\n      }), \" interface.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"http.FileServer\"\n      }), \" function is used to serve static files in the directory.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"http.StripPrefix\"\n      }), \" function is used to remove the \\\"/static/\\\" prefix from the request URL before passing it to the file server. This is useful to avoid exposing the actual directory structure in the URL.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"Getting started with Go's net/http Package","description":"Explore the `net/http` package in Go and learn how to build robust and efficient HTTP servers and clients.","publishedTime":"2024-02-23","modifiedTime":"2024-02-23","image":"/images/gopher-github-actions.jpeg"}},"frontMatter":{"title":"Getting started with Go's net/http Package","description":"Explore the `net/http` package in Go and learn how to build robust and efficient HTTP servers and clients.","publishedTime":"2024-02-23","modifiedTime":"2024-02-23","image":"/images/gopher-github-actions.jpeg"}},"__N_SSG":true}