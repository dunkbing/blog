{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    ul: \"ul\",\n    li: \"li\",\n    h1: \"h1\",\n    pre: \"pre\",\n    code: \"code\",\n    strong: \"strong\",\n    img: \"img\",\n    em: \"em\"\n  }, _provideComponents(), props.components), {Image} = _components;\n  if (!Image) _missingMdxReference(\"Image\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(\"br\", {}), \"\\n\", _jsx(Image, {\n      alt: `Gopher`,\n      src: `/images/gopher-github-actions.jpeg`,\n      priority: true,\n      width: 1024,\n      height: 1024\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(_components.p, {\n      children: \"This tutorial will show you how to setup a CI/CD pipeline using GitHub Actions. The pipeline will test, build and publish a Go app to Docker Hub when changes are pushed to a GitHub repository.\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"overview\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#overview\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), _jsx(_components.a, {\n        href: \"#overview\"\n      }), \"Overview\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Here is an overview of what's in this guide:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"We start by creating a simple console app in Go that prints Hello World along with the version number of the app.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"We will create a GitHub repository and assign Docker Hub credentials using the Secrets feature of GitHub.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"We will create a GitHub workflow that runs Go tests each time a change is pushed to the main branch. The workflow will be configured to build a Docker image and push it to Docker Hub when a tag is pushed to the repository.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"The workflow will extract a version number from a Git tag and assign it to a Go variable at build time so the latest version is printed when the app is run.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"We will see the workflows in action. First by seeing what happens when we push code that fails tests. We will fix the code and see it pass, then we will see what happens when we push a tag.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h1, {\n      id: \"1-create-go-project\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#1-create-go-project\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), _jsx(_components.a, {\n        href: \"#1-create-go-project\"\n      }), \"1. Create Go Project\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"First let's create a simple Go program that prints out Hello World along with the version number of our app.\\nCreate a folder to store our files:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"mkdir\"\n        }), \" ~/golang-pipeline\\n$ \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \"cd\"\n        }), \" ~/golang-pipeline\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Create \", _jsx(_components.strong, {\n        children: \"main.go\"\n      }), \" and \", _jsx(_components.strong, {\n        children: \"main_test.go\"\n      })]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"touch\"\n        }), \" main.go\\n$ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"touch\"\n        }), \" main_test.go\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Add the following code to \", _jsx(_components.strong, {\n        children: \"main.go\"\n      })]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"package\"\n        }), \" main\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"fmt\\\"\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"var\"\n        }), \" version \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"dev\\\"\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"func\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"main\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    fmt\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"Printf\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"Version: %s\\\\n\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" version\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n    fmt\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"Println\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"hello\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"func\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"hello\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token builtin\",\n          children: \"string\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"Hello Golang\\\"\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Note: the version variable is assigned the string \", _jsx(_components.code, {\n        children: \"dev\"\n      }), \" and the string returned by the \", _jsx(_components.code, {\n        children: \"hello\"\n      }), \" function is intentionally wrong so that our tests fail. Later we will see how the GitHub action can be configured to automatically replace the version string at build time.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Add the following code to \", _jsx(_components.strong, {\n        children: \"main_test.go\"\n      })]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-go\",\n      children: _jsxs(_components.code, {\n        className: \"language-go\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"package\"\n        }), \" main\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"testing\\\"\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"func\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"TestHello\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"t \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"*\"\n        }), \"testing\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), \"T\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    want \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"Hello Golang\\\"\"\n        }), \"\\n\\n    got \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"hello\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n\\n    \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"if\"\n        }), \" want \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"!=\"\n        }), \" got \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n        t\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"Fatalf\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"want %s, got %s\\\\n\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" want\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" got\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Make sure our tests run and fail by running:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ go \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \"test\"\n        }), \"\\n\\n--- FAIL: TestHello \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), \".00s\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \"\\n    main_test.go:9: want Hello Golang, got Hello Golang\\nFAIL\\n\", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \"exit\"\n        }), \" status \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), \"\\nFAIL    hello   \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), \".003s\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It fails because we made the return value of the hello function wrong on purpose so we can test the CI/CD pipeline catches errors.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We can also test the app runs by running:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"$ go run main.go\\n\\nVersion: dev\\nHello golang\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Notice it prints out \", _jsx(_components.strong, {\n        children: \"dev\"\n      }), \" for the version. When we run the release version from the published image on Docker Hub, we will see the version number that was tagged when pushing a release to the GitHub repo.\"]\n    }), \"\\n\", _jsxs(_components.h1, {\n      id: \"2-create-github-repository\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#2-create-github-repository\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), _jsx(_components.a, {\n        href: \"#2-create-github-repository\"\n      }), \"2. Create GitHub Repository\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Login to your GitHub account and create a new repository. For the following example I have created a new public repo (exmple \", _jsx(_components.a, {\n        href: \"https://github.com/Ja7ad/golang-pipeline\",\n        children: \"golang-pipeline\"\n      }), \")\"]\n    }), \"\\n\", _jsxs(_components.h1, {\n      id: \"3-assign-docker-hub-credentials-as-secrets\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#3-assign-docker-hub-credentials-as-secrets\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), _jsx(_components.a, {\n        href: \"#3-assign-docker-hub-credentials-as-secrets\"\n      }), \"3. Assign Docker Hub Credentials as Secrets\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For this step you will need to login to your Docker Hub account and generate an \", _jsx(_components.a, {\n        href: \"https://hub.docker.com/settings/security\",\n        children: \"access token\"\n      }), \". Once you've done that, navigate to the \", _jsx(_components.strong, {\n        children: \"Settings\"\n      }), \" screen of the GitHub repository then click on \", _jsx(_components.strong, {\n        children: \"Secrets\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.img, {\n        src: \"/images/notes/create_secret_docker_username_ga.png\",\n        alt: \"Create Secret DOCKER_USERNAME\"\n      }), \"\\n\", _jsx(_components.em, {\n        children: \"Create Secret DOCKER_USERNAME\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.img, {\n        src: \"/images/notes/create_secret_docker_access_token_ga.png\",\n        alt: \"Create Secret DOCKER_ACCESS_TOKEN\"\n      }), \"\\n\", _jsx(_components.em, {\n        children: \"Create Secret DOCKER_ACCESS_TOKEN\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.img, {\n        src: \"/images/notes/secret_for_pipeline.png\",\n        alt: \"Secrets for pipeline\"\n      }), \"\\n\", _jsx(_components.em, {\n        children: \"Secrets for pipeline\"\n      })]\n    }), \"\\n\", _jsxs(_components.h1, {\n      id: \"4-create-github-workflow\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#4-create-github-workflow\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), _jsx(_components.a, {\n        href: \"#4-create-github-workflow\"\n      }), \"4. Create GitHub Workflow\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We are now ready to create the GitHub workflow. Create a folder inside your repository called \", _jsx(_components.code, {\n        children: \".github/workflows\"\n      }), \" and add a file called \", _jsx(_components.strong, {\n        children: \"push.yml\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"mkdir\"\n        }), \" -p .github/workflows\\n$ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"touch\"\n        }), \" .github/workflows/push.yml\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Add the following config to the \", _jsx(_components.strong, {\n        children: \"push.yml\"\n      }), \" file:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-yaml\",\n      children: _jsxs(_components.code, {\n        className: \"language-yaml\",\n        children: [_jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" golang\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"pipeline\\n\", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"on\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" push\\n\", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"jobs\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"test\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"runs-on\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" ubuntu\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"latest\\n    \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"if\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" github.ref == 'refs/heads/main' \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"|\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"|\"\n        }), \" startsWith(github.ref\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" 'refs/tags')\\n    \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"steps\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"uses\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" actions/checkout@v2\\n        \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Run Unit Tests\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"run\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" go test\\n\\n    \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"deploy\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"runs-on\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" ubuntu\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"latest\\n    \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"needs\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" test\\n    \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"if\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" startsWith(github.ref\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" 'refs/tags')\\n    \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"steps\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Extract Version\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"id\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" version_step\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"run\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"|\"\n        }), _jsx(_components.span, {\n          className: \"token scalar string\",\n          children: \"\\n            echo \\\"##[set-output name=version;]VERSION=${GITHUB_REF#$\\\"refs/tags/v\\\"}\\\"\\n            echo \\\"##[set-output name=version_tag;]$GITHUB_REPOSITORY:${GITHUB_REF#$\\\"refs/tags/v\\\"}\\\"\\n            echo \\\"##[set-output name=latest_tag;]$GITHUB_REPOSITORY:latest\\\"\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Print Version\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"run\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"|\"\n        }), _jsx(_components.span, {\n          className: \"token scalar string\",\n          children: \"\\n            echo ${{steps.version_step.outputs.version_tag}}\\n            echo ${{steps.version_step.outputs.latest_tag}}\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Set up QEMU\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"uses\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" docker/setup\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"qemu\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"action@v1\\n\\n        \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Set up Docker Buildx\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"uses\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" docker/setup\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"buildx\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"action@v1\\n\\n        \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Login to DockerHub\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"uses\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" docker/login\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"action@v1\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"with\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n            \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"username\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" $\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" secrets.DOCKERHUB_USERNAME \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n            \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"password\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" $\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" secrets.DOCKERHUB_TOKEN \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\\n        \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" PrepareReg Names\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"id\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" read\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"docker\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"image\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"identifiers\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"run\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"|\"\n        }), _jsx(_components.span, {\n          className: \"token scalar string\",\n          children: \"\\n            echo VERSION_TAG=$(echo ${{ steps.version_step.outputs.version_tag }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV\\n            echo LASTEST_TAG=$(echo ${{ steps.version_step.outputs.latest_tag  }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" Build and push\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"id\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" docker_build\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"uses\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" docker/build\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"push\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"action@v2\\n        \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"with\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"\\n            \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"push\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean important\",\n          children: \"true\"\n        }), \"\\n            \", _jsx(_components.span, {\n          className: \"token key atrule\",\n          children: \"tags\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"|\"\n        }), _jsx(_components.span, {\n          className: \"token scalar string\",\n          children: \"\\n            ${{env.VERSION_TAG}}\\n            ${{env.LASTEST_TAG}}\\n            build-args: |\\n            ${{steps.version_step.outputs.version}}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Replace Variables in the environment with \", _jsx(_components.strong, {\n        children: \"$\"\n      }), \" ( \", _jsx(_components.a, {\n        href: \"https://github.com/Ja7ad/golang-pipeline/blob/main/.github/workflows/push.yml\",\n        children: \"example push.yml\"\n      }), \" )\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The workflow config is quite simple. You will notice there are two jobs, one called \", _jsx(_components.strong, {\n        children: \"test\"\n      }), \" and one called \", _jsx(_components.strong, {\n        children: \"deploy\"\n      }), \". The \", _jsx(_components.strong, {\n        children: \"test\"\n      }), \" job has one step that uses an if to make sure it only runs when changes are pushed to the main branch or a tag is pushed.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The deploy job requires the test job to run first so that if the tests fail, the Docker image will not be built. If the test job does pass, the remaining steps will run. The first step extracts the version number from a git tag that has the following format \", _jsx(_components.strong, {\n        children: \"v1.0.0\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The next two steps setup the environment so that Docker images can be built. Finally, a step is run that signs into your Docker Hub account using the credentials stored in GitHub Secrets, then the Docker image is built and pushed to Docker Hub.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You Can see you run action pipeline in \", _jsx(_components.strong, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/USERNAME/golang-pipeline/actions\",\n          children: \"https://github.com/USERNAME/golang-pipeline/actions\"\n        })\n      }), \" your repo.\"]\n    }), \"\\n\", _jsxs(_components.h1, {\n      id: \"5-create-dockerfile\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#5-create-dockerfile\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), _jsx(_components.a, {\n        href: \"#5-create-dockerfile\"\n      }), \"5. Create Dockerfile\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Now we need to create a \", _jsx(_components.strong, {\n        children: \"Dockerfile\"\n      }), \" for the GitHub action to use when building the image. Create a file called \", _jsx(_components.strong, {\n        children: \"Dockerfile\"\n      }), \" at the root of the repo.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"$ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"touch\"\n        }), \" Dockerfile\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Add the following to the \", _jsx(_components.strong, {\n        children: \"Dockerfile\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-dockerfile\",\n      children: _jsxs(_components.code, {\n        className: \"language-Dockerfile\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"FROM\"\n        }), \" golang\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"1.16.4\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"buster AS builder\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"ARG\"\n        }), \" VERSION=dev\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"WORKDIR\"\n        }), \" /go/src/app\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"COPY\"\n        }), \" main.go .\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"RUN\"\n        }), \" go build \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"o main \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"ldflags=\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"X=main.version=$\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"VERSION\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \" main.go\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"FROM\"\n        }), \" debian\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \":\"\n        }), \"buster\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"slim\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"COPY\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"-\"\n        }), \"from=builder /go/src/app/main /go/bin/main\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"ENV\"\n        }), \" PATH=\", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"/go/bin:${PATH}\\\"\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"CMD\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"main\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The config above uses a multi-stage build process to build the Go app then copy it to a slim Debian image. If you want to make the image smaller, you can change it to alpine or scratch.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Let's test the \", _jsx(_components.strong, {\n        children: \"Dockerfile\"\n      }), \" by building it with the following command:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"    $ docker build -t golang-pipeline:dev \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \".\"\n        }), \"\\n\\n    Sending build context to Docker daemon  \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"114\"\n        }), \".2kB\\n    Step \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), \"/9 \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \":\"\n        }), \" FROM golang:1.16.4-buster AS builder\\n    \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1.16\"\n        }), \".4-buster: Pulling from library/golang\\n    d960726af2be: Pull complete\\n    e8d62473a22d: Pull complete\\n    8962bc0fad55: Pull complete\\n    65d943ee54c1: Pull complete\\n    f2253e6fbefa: Pull complete\\n    6d7fa7c7d5d3: Pull complete\\n    e2e442f7f89f: Pull complete\\n    Digest: sha256:ab32429d40c1b734ed4f036838ac516352182f9414563478fa88a1553c4a4414\\n    Status: Downloaded newer image \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"for\"\n        }), \" golang:1.16.4-buster\\n     ---\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" 96129f3766cf\\n    Step \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2\"\n        }), \"/9 \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \":\"\n        }), \" ARG \", _jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: \"VERSION\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"dev\\n     ---\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" Running \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"in\"\n        }), \" 819610ae34de\\n    Removing intermediate container 819610ae34de\\n     ---\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" 9eec806043be\\n    Step \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"3\"\n        }), \"/9 \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \":\"\n        }), \" WORKDIR /go/src/app\\n     ---\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" Running \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"in\"\n        }), \" 46c0cf6a36b4\\n    Removing intermediate container 46c0cf6a36b4\\n     ---\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" 1f1f66dfcc4f\\n    Step \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"4\"\n        }), \"/9 \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \":\"\n        }), \" COPY main.go \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \".\"\n        }), \"\\n     ---\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" 963a3bcf262b\\n    Step \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"5\"\n        }), \"/9 \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \":\"\n        }), \" RUN go build -o main -ldflags\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"-X\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"main.version\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), _jsx(_components.span, {\n          className: \"token variable\",\n          children: \"${VERSION}\"\n        }), \" main.go\\n     ---\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" Running \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"in\"\n        }), \" c18447aa254a\\n    Removing intermediate container c18447aa254a\\n     ---\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" 3d5364678624\\n    Step \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"6\"\n        }), \"/9 \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \":\"\n        }), \" FROM debian:buster-slim\\n    buster-slim: Pulling from library/debian\\n    69692152171a: Pull complete\\n    Digest: sha256:f077cd32bfea6c4fa8ddeea05c53b27e90c7fad097e2011c9f5f11a8668f8db4\\n    Status: Downloaded newer image \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"for\"\n        }), \" debian:buster-slim\\n     ---\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" 80b9e7aadac5\\n    Step \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"7\"\n        }), \"/9 \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \":\"\n        }), \" COPY --from\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"builder /go/src/app/main /go/bin/main\\n     ---\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" f96694436dca\\n    Step \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"8\"\n        }), \"/9 \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \":\"\n        }), \" ENV \", _jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: _jsx(_components.span, {\n            className: \"token environment constant\",\n            children: \"PATH\"\n          })\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), _jsxs(_components.span, {\n          className: \"token string\",\n          children: [\"\\\"/go/bin:\", _jsxs(_components.span, {\n            className: \"token variable\",\n            children: [\"${\", _jsx(_components.span, {\n              className: \"token environment constant\",\n              children: \"PATH\"\n            }), \"}\"]\n          }), \"\\\"\"]\n        }), \"\\n     ---\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" Running \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"in\"\n        }), \" 0423a0a1b60a\\n    Removing intermediate container 0423a0a1b60a\\n     ---\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" 8ac59bcbe805\\n    Step \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"9\"\n        }), \"/9 \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \":\"\n        }), \" CMD \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"main\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \"\\n     ---\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" Running \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"in\"\n        }), \" 1491bcf193c6\\n    Removing intermediate container 1491bcf193c6\\n     ---\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" 190ba9407211\\n    Successfully built 190ba9407211\\n    Successfully tagged golang-pipeline:dev\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Now run the image and see if it prints the incorrect string \", _jsx(_components.strong, {\n        children: \"Hello Golang\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"    $ docker run --rm golang-pipeline:dev\\n\\n    Version: dev\\n    Hello golang\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We can assign a version to the image by using \", _jsx(_components.code, {\n        children: \"--build-arg VERSION=1.0.0\"\n      }), \" while building the image. For example:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"    $ docker build -t golang-pipeline:1.0.0 \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \".\"\n        }), \" --build-arg \", _jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: \"VERSION\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1.0\"\n        }), \".0\\n\\n    Sending build context to Docker daemon  \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"114\"\n        }), \".2kB\\n    Step \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1\"\n        }), \"/9 \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \":\"\n        }), \" FROM golang:1.16.4-buster AS builder\\n     ---\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" 96129f3766cf\\n    Step \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2\"\n        }), \"/9 \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \":\"\n        }), \" ARG \", _jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: \"VERSION\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"dev\\n     ---\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" Using cache\\n     ---\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" 9eec806043be\\n    Step \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"3\"\n        }), \"/9 \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \":\"\n        }), \" WORKDIR /go/src/app\\n     ---\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" Using cache\\n     ---\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" 1f1f66dfcc4f\\n    Step \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"4\"\n        }), \"/9 \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \":\"\n        }), \" COPY main.go \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \".\"\n        }), \"\\n     ---\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" Using cache\\n     ---\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" 963a3bcf262b\\n    Step \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"5\"\n        }), \"/9 \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \":\"\n        }), \" RUN go build -o main -ldflags\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"-X\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"main.version\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), _jsx(_components.span, {\n          className: \"token variable\",\n          children: \"${VERSION}\"\n        }), \" main.go\\n     ---\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" Running \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"in\"\n        }), \" 352fb8de7969\\n    Removing intermediate container 352fb8de7969\\n     ---\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" 0950776088fa\\n    Step \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"6\"\n        }), \"/9 \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \":\"\n        }), \" FROM debian:buster-slim\\n     ---\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" 80b9e7aadac5\\n    Step \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"7\"\n        }), \"/9 \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \":\"\n        }), \" COPY --from\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"builder /go/src/app/main /go/bin/main\\n     ---\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" 91938ce4f326\\n    Step \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"8\"\n        }), \"/9 \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \":\"\n        }), \" ENV \", _jsx(_components.span, {\n          className: \"token assign-left variable\",\n          children: _jsx(_components.span, {\n            className: \"token environment constant\",\n            children: \"PATH\"\n          })\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), _jsxs(_components.span, {\n          className: \"token string\",\n          children: [\"\\\"/go/bin:\", _jsxs(_components.span, {\n            className: \"token variable\",\n            children: [\"${\", _jsx(_components.span, {\n              className: \"token environment constant\",\n              children: \"PATH\"\n            }), \"}\"]\n          }), \"\\\"\"]\n        }), \"\\n     ---\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" Running \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"in\"\n        }), \" 44541fe9de77\\n    Removing intermediate container 44541fe9de77\\n     ---\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" c8924b6b45b3\\n    Step \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"9\"\n        }), \"/9 \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \":\"\n        }), \" CMD \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"main\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), \"\\n     ---\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" Running \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"in\"\n        }), \" 424b93b94419\\n    Removing intermediate container 424b93b94419\\n     ---\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \">\"\n        }), \" 9da417e7399b\\n    Successfully built 9da417e7399b\\n    Successfully tagged golang-pipeline:1.0.0\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The docker image built can be found here:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"    $ docker images\\n\\n    REPOSITORY                TAG             IMAGE ID       CREATED          SIZE\\n    golang-pipeline           \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1.0\"\n        }), \".0           9da417e7399b   \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"22\"\n        }), \" seconds ago   \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"71\"\n        }), \".2MB\\n    golang-pipeline           dev             190ba9407211   \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"3\"\n        }), \" minutes ago    \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"71\"\n        }), \".2MB\\n    golang                    \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"1.16\"\n        }), \".4-buster   96129f3766cf   \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2\"\n        }), \" weeks ago      862MB\\n    debian                    buster-slim     80b9e7aadac5   \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"2\"\n        }), \" weeks ago      \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"69\"\n        }), \".2MB\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The reason this works, is because we use \", _jsx(_components.code, {\n        children: \"-ldflags\"\n      }), \" to modify the version variable at compile time. The \", _jsx(_components.code, {\n        children: \"--build-arg\"\n      }), \" assigns the version to \", _jsx(_components.strong, {\n        children: \"VERSION\"\n      }), \" and is used in the following line:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"    RUN go build -o main -ldflags\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"-X\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \"main.version\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), _jsx(_components.span, {\n          className: \"token variable\",\n          children: \"${VERSION}\"\n        }), \" main.go\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Okay, we are now ready to push our code to the GitHub repository.\"\n    }), \"\\n\", _jsxs(_components.h1, {\n      id: \"6-push-code-to-main\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#6-push-code-to-main\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), _jsx(_components.a, {\n        href: \"#6-push-code-to-main\"\n      }), \"6. Push Code to Main\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Now that we know our project builds and we have created a repository, we are ready to push our code to the main branch. Let’s initialise Git, commit our changes, add the origin, and push the changes by running the following commands (replace the repo URL with your own):\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"    $ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"git\"\n        }), \" init\\n    $ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"git\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"add\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \".\"\n        }), \"\\n    $ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"git\"\n        }), \" commit -m \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"first commit\\\"\"\n        }), \"\\n    $ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"git\"\n        }), \" remote \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"add\"\n        }), \" origin git@github.com:USERNAME/golang-pipeline\\n    $ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"git\"\n        }), \" branch -M main\\n    $ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"git\"\n        }), \" push -u origin main\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.h1, {\n      id: \"7-check-build-failed\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#7-check-build-failed\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), _jsx(_components.a, {\n        href: \"#7-check-build-failed\"\n      }), \"7. Check Build Failed\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Go to your GitHub repository and click \", _jsx(_components.strong, {\n        children: \"Actions\"\n      }), \". We should see the GitHub action running. Since we are pushing to the main branch, it will run the \", _jsx(_components.strong, {\n        children: \"test\"\n      }), \" job and it should fail.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.img, {\n        src: \"/images/notes/ga_build_fail.png\",\n        alt: \"Github Action test fail_\"\n      }), \"\\n\", _jsx(_components.em, {\n        children: \"Github Action test fail\"\n      })]\n    }), \"\\n\", _jsxs(_components.h1, {\n      id: \"8-fix-code-so-test-passes\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#8-fix-code-so-test-passes\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), _jsx(_components.a, {\n        href: \"#8-fix-code-so-test-passes\"\n      }), \"8. Fix Code so Test Passes\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Let's fix the broken test.\\nOpen \", _jsx(_components.strong, {\n        children: \"main.go\"\n      }), \" and modify the return value of the \", _jsx(_components.code, {\n        children: \"hello\"\n      }), \" function so that it returns \", _jsx(_components.code, {\n        children: \"Hello Golang\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"    $ go \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \"test\"\n        }), \"\\n\\n    PASS\\n    ok      hello   \", _jsx(_components.span, {\n          className: \"token number\",\n          children: \"0\"\n        }), \".003s\\n\\n\\nCommit and push the changes.\\n\\n    $ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"git\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"add\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token builtin class-name\",\n          children: \".\"\n        }), \"\\n    $ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"git\"\n        }), \" commit - \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"Fix hello function return value\\\"\"\n        }), \"\\n    $ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"git\"\n        }), \" push\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The GitHub action should run again and now the test will pass.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.img, {\n        src: \"/images/notes/ga_test_successfully.png\",\n        alt: \"Github Action test fail_\"\n      }), \"\\n\", _jsx(_components.em, {\n        children: \"Github Action test successfully\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.img, {\n        src: \"/images/notes/ga_status.png\",\n        alt: \"Github Action test fail_\"\n      }), \"\\n\", _jsx(_components.em, {\n        children: \"Github Action status\"\n      })]\n    }), \"\\n\", _jsxs(_components.h1, {\n      id: \"9-push-tag\",\n      children: [_jsx(_components.a, {\n        \"aria-hidden\": \"true\",\n        tabIndex: \"-1\",\n        href: \"#9-push-tag\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), _jsx(_components.a, {\n        href: \"#9-push-tag\"\n      }), \"9. Push Tag\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Now that we know the test passes, let's push a release tag. We will tag this version as \", _jsx(_components.strong, {\n        children: \"v1.0.0\"\n      })]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-bash\",\n      children: _jsxs(_components.code, {\n        className: \"language-bash\",\n        children: [\"    $ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"git\"\n        }), \" tag v1.0.0\\n    $ \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"git\"\n        }), \" push --tags\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"After pushing the tags, the GitHub action will run again and this time it will build the Docker image and push it to your Docker Hub repository.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Build CI/CD pipelines in Go with github actions and Docker","description":"Build CI/CD pipelines in Go with github actions and Docker","publishedTime":"2024-01-30","modifiedTime":"2024-01-30","image":"/images/gopher-github-actions.jpeg"}},"frontMatter":{"title":"Build CI/CD pipelines in Go with github actions and Docker","description":"Build CI/CD pipelines in Go with github actions and Docker","publishedTime":"2024-01-30","modifiedTime":"2024-01-30","image":"/images/gopher-github-actions.jpeg"}},"__N_SSG":true}